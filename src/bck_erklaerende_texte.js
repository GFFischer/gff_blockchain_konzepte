var a0_info1 = "Eine Blockchain ist zunächst einmal eine Art und Weise, wie Daten gespeichert werden können. Sie ist also in erster Linie eine sogenannte <strong>„Datenstruktur“</strong>. Die Blockchain als Datenstruktur ist der erste von drei Bestanteilen, die zur Blockchain-Technologie dazugehören. Bei der Blockchain-Datenstruktur werden neue Daten in grösseren Einheiten (sogenannte „Blöcke“) zusammengefasst. Die einzelnen Blöcke werden miteinander verbunden, sodass sich eine Kette von Blöcken bildet, an deren Ende jeweils ein neuer Block angehängt wird. Das Besondere dabei ist, dass Blöcke, die einmal der Kette hinzugefügt worden sind, im Nachhinein nicht mehr verändert werden können, sodass die Daten in einer Blockchain praktisch fälschungssicher gespeichert sind. <br><br> Die Blockchain-Technologie wurde ursprünglich dafür geschaffen, um Werte (z.B. digitales Geld) von einer Person zu einer anderen Person zu übertragen, ohne dass es dafür eine vertrauenswürdige Institution (z.B. eine Bank) benötigt. Eine Bank ist etwa dafür zuständig, zu prüfen und zu bestätigen, dass die eine Person das Geld überhaupt besitzt, das überwiesen werden soll, und dass das überwiesene Geld tatsächlich auf dem Konto der anderen Person ankommt. Dafür werden, vereinfacht ausgedrückt, alle Daten auf einem zentralen Computer bei der Bank gespeichert. <br><br> Bei der Blockchain-Technologie ist das nicht der Fall. Alle an einer Blockchain beteiligten Personen bilden ein Netzwerk, bei dem alle Daten auf allen Computern aller beteiligten Personen gespeichert sind. Alle teilnehmenden Personen („Peers“) sind dabei gleichwertig, man spricht von einem <strong>„Peer-to-Peer-Netzwerk“</strong>, dem zweiten Bestandteil der Blockchain-Technologie. <br><br> Wenn sich die einzelnen Personen in diesem Netzwerk nicht kennen und daher auch nicht wissen, ob sie einander vertrauen können, benötigt es Algorithmen, also Lösungswege, mit denen sichergestellt werden kann, dass bei Übertragungen von Werten die sendende Person wirklich im Besitz dieser Werte ist, dass ein Wert nur einmal übertragen wird (dass z.B. digitales Geld nicht „kopiert“ und mehrmals ausgegeben werden kann), dass die in den Blöcken der Blockchain gespeicherten Daten von früheren Übertragungen im Nachhinein nicht mehr geändert werden können, dass die Blockchain auch dann noch funktioniert, wenn nicht alle teilnehmenden Personen ihre Computer eingeschaltet haben, … Die Summe dieser Algorithmen bildet den dritten Bestandteil der Blockchain-Technologie, den sogenannten <strong>„Konsensmechanismus“</strong>. <br><br> Machen wir uns auf den Weg, um alle drei Bestandteile der Blockchain-Technologie zu erkunden!";
var a0_hinterg1 = "Wir befinden uns im November des Jahres 2008. Es erscheint ein wissenschaftlicher Beitrag mit dem Titel „Bitcoin - A Peer-to-Peer Electronic Cash System“ von einem gewissen „Satoshi Nakamoto“. Niemand kennt den Verfasser, und sofort ist klar, dass es sich um ein Pseudonym handeln muss, denn „Satoshi Nakamoto“ ist in Japan ein beliebter Platzhaltername, mit dem vergleichbar, was im deutschen Sprachraum „Max Mustermann“ oder in Amerika „John Doe“ ist. <br><br> Die grosse Finanzkrise hat gerade begonnen und das Vertrauen in Banken, Nationalbanken, Finanzaufsichtsbehörden usw. ist auf dem Tiefpunkt. Die Idee einer rein digitalen Währung (einer „Kryptowährung“) fällt auf fruchtbaren Boden. Und das Konzept von Nakamoto ist genial. Er bedient sich einiger in der Informatik gängiger Konzepte, z.B. dem eines Peer-to-Peer-Netzwerks, dem der Berechnung von Hashwerten oder dem der asymmetrischen Kryptographie, und kombiniert sie so geschickt, dass dadurch eine neue Technologie entsteht: die Blockchain. <br><br> Die Anwendung dieser Technologie lässt nicht lange auf sich warten. Bereits 2009 werden die ersten Bitcoins gehandelt. „Bitcoin“ ist eine Wortkomposition aus „Bit“, der kleinsten Speichereinheit eines Computers und „Coin“, dem englischen Wort für „Münze“. <br><br> Die Blockchain-Technologie wird vielfach adaptiert und erweitert. Neue Kryptowährungen kommen und gehen, nur wenige können sich halten. Die erfolgreichsten neben Bitcoin sind derzeit (Stand Juli 2024) Ether, Tether, BNB oder Solana. Erfolgreich werden auch Handelsplattformen wie Bitpanda oder Coinbase, wo Kryptowährungen gekauft und verkauft werden können. <br><br> Allein die Person oder die Personen, die hinter dem Pseudonym „Satoshi Nakamoto“ stehen, geben sich nicht zu erkennen – bis heute nicht. Und das ist umso bemerkenswerter, weil sich in der digitalen Geldtasche von Nakamoto seit den Anfangsjahren von Bitcoin knapp 1 Million Bitcoins befinden, was ihn oder sie zu Multimilliardären machen würde. Aber dieses Vermögen wird nicht angerührt. <br><br> Vielleicht eines der grössten Geheimnisse in der digitalen Welt …";

var a1a_info1 = "Den Weg dahin, die Blockchain-Datenstruktur zu verstehen, wollen wir beginnen, indem wir die Blockchain mit einem <strong>Buch</strong> vergleichen. Ein Buch besteht aus lauter einzelnen Seiten. Auf jeder Seite befinden sich in der Regel ein bestimmter <strong>Inhalt</strong> (z.B. ein Text bei einem Roman, Namen und Telefonnummern bei einem Telefonbuch, eine Auflistung von Eingängen und Abhebungen bei einem Sparbuch, …) und eine <strong>Seitenzahl</strong>. Bücher sind gewöhnlich gebunden, daher können die einzelnen Seiten nicht in Unordnung geraten, und es ist auch nicht möglich, eine neue Seite hinzuzufügen. <br><br> Wenn wir uns aber vorstellen, dass unser Buch nicht gebunden ist, sondern aus lauter losen einzelnen Seiten besteht, und wenn wir uns weiter vorstellen, dass ein Windstoss alle Seiten durcheinandergewirbelt hat, dann dient die Seitenzahl dazu, die Seiten wieder in die richtige Ordnung zu bringen. Jede Seitenzahl ist somit eine <strong>Referenz</strong> auf die jeweils vorherige und die jeweils nachfolgende Seite. <br><br> Wir wollen die Blockchain also mit einem Buch vergleichen, das nicht gebunden ist, sondern aus lauter einzelnen Seiten besteht, die durch die Seitenzahl aufeinander bezogen sind, und das überdies noch die Besonderheit hat, dass ständig neue Seiten hinzugefügt werden können. Jede neue Seite bekommt eine neue, bisher noch nicht vergebene Seitenzahl, die jeweils um 1 höher ist als die Seitenzahl der bisher letzten Seite. Weil wir irgendwann einmal zählen gelernt haben, können wir die einzelnen Seiten dadurch zueinander in Beziehung bringen.";
var a1a_hinterg1 = "Das Bild des Buches findet man auch im Namen derjenigen Technologien, die man als <strong>„Distributed-Ledger-Technologien“</strong> bezeichnet und von denen die Blockchain einen Spezialfall bildet. „Distributed“ heisst „verteilt“ und „ledger“ bedeutet „Hauptbuch“. Ein Hauptbuch ist ein Buch, in dem systematisch sämtliche geschäftlichen Vorgänge aufgezeichnet werden. <br><br> „Distributed-Ledger-Technologien“ ist der Oberbegriff für alle Technologien, bei denen gemeinsame Daten in einem Netzwerk gespeichert werden, und zwar nicht auf einem einzigen zentralen Computer, sondern auf allen am Netzwerk teilnehmenden Computern. Das geschieht ja auch bei einer Blockchain. <br><br> Die Hauptaufgabe besteht nun darin, in so einem Peer-to-Peer-Netzwerk die gemeinsamen Daten bei jedem teilnehmenden Computer aktuell zu halten, sodass diese übereinstimmen, obwohl jeder Computer Daten verändern, löschen oder neue Daten hinzufügen kann. (Bei einer Blockchain ist nur das Hinzufügen von neuen Daten möglich.) Dafür benötigt es einen Konsensmechanismus, der dafür sorgt, dass die Änderungen an den Daten auf alle teilnehmenden Computer verteilt werden, und der Lösungen dafür bereithält, wenn es zu Konflikten kommt, weil z.B. zwei Computer gleichzeitig dieselben Daten bearbeitet haben. <br><br> Ein „Distributed Ledger“ ist also wie ein Buch, von dem jede an einem Netzwerk teilnehmende Person eine eigene Ausgabe besitzt. Wenn eine Person etwas Neues in dieses Buch hineinschreibt, steht es sofort auch in allen anderen Ausgaben dieses Buches bei allen anderen Personen. Wenn eine Person etwas löscht, ist es in allen Ausgaben gelöscht, wenn eine Person einen Eintrag ändert, ist dieser bei allen Ausgaben geändert.";
var a1b_info1 = "Wir wollen die Blockchain weiterhin mit einem Buch vergleichen, das aus losen Seiten besteht und dem jederzeit eine neue Seite hinzugefügt werden kann. Die Seiten bestehen aus einem bestimmten Inhalt und einer „Seitenzahl“. Diese Zahl hat bei einer Blockchain allerdings eine besondere Eigenschaft: Sie ist abhängig vom Inhalt. Das heisst, sie ändert sich, wenn am Inhalt der Seite eine Änderung vorgenommen wird. Es ist eine Zahl, die aus dem Inhalt der Seite berechnet wird. <br><br> Diese Berechnung geschieht mit einer bestimmten Berechnungsmethode, einer sogenannten <strong>„Hashfunktion“</strong>. Das Ergebnis einer solchen Berechnung der Daten (= des Inhalts der Seite) ist eine Zahl, ein sogenannter <strong>„Hashwert“</strong>. Einen Hashwert können wir mit dem Fingerabdruck eines Menschen vergleichen. So wie ein Mensch über seinen Fingerabdruck identifiziert werden kann, so können Daten über ihren Hashwert identifiziert werden. Damit das gelingt, muss eine Hashfunktion folgende fünf Eigenschaften erfüllen: <ol><li>Alle berechneten Hashwerte müssen <strong>die gleiche Länge</strong> haben, egal wie umfangreich die Daten sind, auf die die Hashfunktion angewendet wird. Die errechneten Zahlen (= Hashwerte) dürfen allerdings auch mit einer oder mehreren Nullen beginnen. (In unseren Animationen handelt es sich bei allen berechneten Hashwerten um achtstellige hexadezimale Zahlen.)</li><li>Bei <strong>identischen Daten</strong> muss nach der Berechnung mittels der Hashfunktion jederzeit der <strong>identische Hashwert</strong> als Ergebnis herauskommen.</li><li>Bei der kleinsten Änderung der Daten muss sich der errechnete Hashwert auf unvorhersehbare Weise ändern. Der Hashwert der geänderten Daten darf nicht vorausgeahnt werden können, sondern muss stets überraschend ausfallen. Man könnte sagen, die errechneten Hashwerte müssen <strong>„pseudozufällig“</strong> sein, also nicht wirklich zufällig, aber völlig unvorhersehbar.</li><li>Eine Hashfunktion muss eine <strong>Einwegfunktion</strong> sein. Das bedeutet, dass es keine mathematische Möglichkeit geben darf, aus dem errechneten Hashwert die ursprünglichen Daten wiederherzustellen.</li><li>Es muss praktisch unmöglich sein, zwei oder mehr unterschiedliche Daten zu finden, auf die derselbe Hashwert berechnet wird. Das heisst, die Anzahl der möglichen Hashwerte muss sehr gross sein. (Bei den kurzen Hashwerten in unseren Animationen sind es nur knapp 4.3 Milliarden Möglichkeiten, bei der Hashfunktion, die z.B. bei der Bitcoin-Blockchain verwendet wird, ist die Anzahl der Möglichkeiten ein 78-stellige Zahl.) Wenn die Wahrscheinlichkeit sehr, sehr gering ist, auf unterschiedliche Daten denselben Hashwert zu berechnen, nennt man die Hashfunktion <strong>„kollisionsresistent“</strong>.</li></ol>Auch wenn es faszinierend sein mag, für jede Seite unseres Buches nun eine vom Inhalt abhängige Seitenzahl zu haben, wirst du dich vermutlich fragen, welchen Nutzen wir davon haben, vor allem dann, wenn ein Windstoss die Seiten unseres Buches durcheinanderwirbelt. Wie sollen wir mit derartigen Seitenzahlen jemals wieder die Seiten in die richtige Ordnung bringen? Genau darum geht es in der nächsten Animation.";
var a1b_hinterg1 = "Die in der Bitcoin-Blockchain verwendete Hashfunktion trägt den Namen <strong>SHA256</strong>. „SHA“ steht dabei für „secure hash algorithms“ („sichere Hashalgorithmen) und die Zahl 256 für die Länge der Hashwerte, die als Ergebnisse der Berechnungen von der Funktion zurückgegeben werden. Bei SHA256 handelt es sich um eine kryptologische Hashfunktion, die vom US-amerikanischen National Institute of Standards and Technology (NIST) standardisiert wurden. <br><br> Die Hashwerte, die SHA256 berechnet, bestehen also aus 256 Bit. Bei der Darstellung der Hashwerte werden im Normalfall jeweils 4 Bit zu einer hexadezimalen Ziffer zusammengefasst, was eine 64stellige hexadezimale Zahl ergibt. Diese Darstellung wurde lediglich deshalb gewählt, weil es für uns Menschen einfacher ist, Hashwerte zu unterscheiden, die aus den Ziffern des Dezimalsystems sowie den ersten sechs Buchstaben des lateinischen Alphabets bestehen, als solche, die aus 256 Nullen und Einsen bestehen. <br><br> (Für die Berechnung der Hashwerte in unseren Animationen wird im Hintergrund tatsächlich auch die Hashfunktion SHA256 durchgeführt, allerdings werden von den 64 Stellen der Übersichtlichkeit halber nur die ersten acht angezeigt.) <br><br> Sehr vereinfacht gesprochen werden bei SHA256 die Daten in Blöcke zu 512 Bit „zerhackt“. Damit die Anzahl aller Bit durch 512 teilbar ist, werden die Daten um eine entsprechende Anzahl Bit erweitert. Dann wird beginnend beim ersten Block nacheinander auf jeden Block die Funktion berechnet, wobei das jeweilige Ergebnis in die Berechnung des jeweils nächsten Blocks mit hineingenommen wird. Das Ergebnis der Berechnung des letzten Blocks ist der Hashwert, der schlussendlich zurückgegeben wird.";
var a1c_info1 = "Wir haben uns bei der vorherigen Animation die Frage gestellt, wie wir in die losen, durcheinandergewirbelten Seiten unseres Buches wieder eine Ordnung bringen können, wenn die „Seitenzahlen“ Hashwerte sind, die zwar sehr viel mit dem Inhalt der jeweiligen Seite, aber rein gar nichts mit dem Hashwert der jeweils vorigen Seite zu tun haben. <br><br> Die Antwort ist denkbar einfach. Wir schreiben einfach auf jede Seite den Hashwert der jeweils vorigen Seite drauf. Dadurch wissen wir, welche Seite sich vor der jeweils aktuellen Seite befindet, und wir können wieder eine Ordnung in die Seiten unseres Buches bringen. Allerdings funktioniert das Ordnen der Seiten nun lediglich in eine Richtung, nämlich von hinten nach vorne, weil wir nicht wissen, welchen Hashwert diejenige Seite hat, die nach der jeweils aktuellen Seite kommt. <br><br> Bevor wir weitermachen, ist es nun an der Zeit, ein wenig vom Bild des Buches mit seinen losen Seiten wegzukommen. Die „Seiten“ einer Blockchain sind deren <strong>„Blöcke“</strong>, und wir wollen sie fortan auch so nennen. Die einzelnen Blöcke sind über ihre Hashwerte miteinander verbunden und bilden somit eine Kette von Blöcken, eine „Blockchain“. <br><br> Hashwerte können auch dafür verwendet werden, um aus ihnen Adressen im Speicher eines Computers zu berechnen. Somit ist es möglich, über einen Hashwert direkt auf die sich im Speicher befindenden Blöcke zuzugreifen. Dadurch wird ein Hashwert auch zu einer <strong>Referenz</strong> auf einen Block einer Blockchain.";
var a1d_info1 = "Weil Hashwerte auch dafür verwendet werden können, Adressen im Speicher eines Computers zu berechnen, können Daten über einen Hashwert im Speicher gefunden werden. Dadurch wird der errechnete Hashwert zu einer Referenz, das heisst, er verweist auf eine bestimmte Adresse. Man nennt diese Hashwerte daher auch <strong>„Hash-Referenzen“</strong>. <br><br> Diese Eigenschaft wird bei einer Blockchain nun dafür genutzt, den Inhalt der Blöcke aus den Blöcken selbst auszulagern und an einem anderen Ort abzuspeichern. Übrig bleibt lediglich der Hashwert des Inhalts. Über diese Hash-Referenz kann der Inhalt im Speicher gefunden werden. Somit besteht der eigentliche Block nur noch aus einer Referenz auf den Inhalt und einer Referenz auf den vorherigen Block der Kette und aus seiner eigenen Hash-Referenz. Diesen „inhaltslosen“ Block nennt man daher den <strong>„Block-Header“</strong>. <br><br> Damit hat das Bild eines Buches, das bisher für die Erklärung der Blockchain-Datenstruktur sehr hilfreich war, ausgedient. Gehen wir über und bleiben fortan beim Bild einer Kette von Block-Headern, wobei an jeden Block-Header dessen Inhalt angekettet ist. <br><br> Wenn du die Animation aufmerksam angesehen hast, ist dir vielleicht aufgefallen, dass sich der Hashwert des Blocks vom Hashwert seines Inhalts unterscheidet. Bisher haben wir gesagt, der Hashwert des Blocks (die „Seitenzahl“) ergibt sich aus dem Inhalt. Nun, weil sich der Inhalt gar nicht mehr im Block-Header befindet, wird der Hashwerts des Blocks aus den Hash-Referenzen des Inhalts und des vorigen Blocks errechnet. Das ist möglich, weil Hashwerte selbst ja auch Daten sind, auf die eine Hashfunktion angewendet werden kann.";

var a2a_info1 = "Das Wort „Peer“ wird häufig übersetzt als „Kollege“, „Ebenbürtiger“ oder „Gleichgestellter“. Wenn wir bei der Blockchain von einem <strong>„Peer-to-Peer-Netzwerk“</strong> sprechen, dann soll damit ausgedrückt werden, dass alle teilnehmenden Computer „Peers“ sind, also gleichberechtigt. Es gibt keinen zentralen Computer (Server), wo die Blockchain gespeichert ist, sondern auf allen Computern ist jeweils eine vollständige Version der Blockchain gespeichert. Es gibt auch keine Einzelcomputer (oft auch als <strong>„Knoten“</strong> bezeichnet), die mehr Rechte beim Hinzufügen von Daten hätten als andere. Alle sind gleichberechtigt. <br><br> Ein solches System hat einige <strong>Vorteile</strong>. Je mehr Computer vernetzt sind, umso grösser ist die gesamte Rechenleistung des Netzwerks. Ein Peer-to-Peer-Netzwerk hat eine höhere Zuverlässigkeit, weil das gesamte System auch dann weiterarbeiten kann, wenn einzelne Rechner abstürzen, ausgeschaltet sind oder dauerhaft ausfallen. Das Netzwerk kann laufend erweitert werden, wenn neue Peers hinzukommen, wodurch die gesamte Rechenleistung gleichsam „natürlich“ wächst. <br><br> Es gibt aber auch <strong>Nachteile</strong>. Der Aufwand für die Koordinierung der einzelnen Computer ist ungleich höher, wenn es keine zentralen Computer gibt, die dafür verantwortlich sind. Ähnlich ist es mit der Kommunikation zwischen den Einzelcomputern, für die es genaue Regeln („Kommunikationsprotokolle“) geben muss. Ein Peer-to-Peer-Netzwerk ist auch davon abhängig, dass die Netzwerkverbindungen der Einzelcomputer (meist über das Internet) funktionieren. Weil die Daten über ein Netzwerk gesendet werden, ergeben sich ausserdem erhöhte Sicherheitsanforderungen. <br><br> In einem Peer-to-Peer-Netzwerk ist nicht jeder Knoten mit jedem anderen Knoten verbunden, weil sonst beim Hinzufügen neuer Knoten die Anzahl der Verbindungen im Netzwerk rasant steigen würde (tatsächlich quadratisch, weil für jeden n-ten neuen Knoten n – 1 neue Verbindungen notwendig wären). Daher hat jeder Peer nur eine bestimmte Anzahl an direkten Verbindungen zu anderen Knoten im Netzwerk. <br><br> (Falls du dich fragst, wie dann sichergestellt werden kann, dass alle Knoten erreicht werden, wenn z.B. ein neuer Block der Blockchain hinzugefügt wird, dann möchten wir dir an dieser Stelle dazu nur mitteilen, dass diese Frage in einer späteren Animation noch geklärt wird.)";
var a2a_hinterg1 = "Bei der Eroberung von Konstantinopel durch die Byzantiner im Jahr 1453 gab es den Plan, dass mehrere Generäle die Stadt gleichzeitig von verschiedenen Seiten aus angreifen. Dazu war es notwendig, dass diese Generäle die Information über den genauen Zeitpunkt des Angriffs einander zukommen liessen. So weit, so gut. Das Problem aber war, dass sich die Generäle untereinander nicht vertrauten, weil einige von ihnen gegen andere beim Sultan intrigierten. Wie konnten sie sicherstellen, dass diese Information auf dem Weg zu ihnen nicht in böswilliger Absicht verändert worden war? <br><br> In einem Peer-to-Peer-System kennen sich die einzelnen Knoten nicht und wissen daher auch nicht, ob sie einander vertrauen können oder nicht. Wie kann sichergestellt werden, dass die Nachrichten (z.B. neue Blöcke in einer Blockchain) auf ihrem Weg zu den einzelnen Knoten nicht in böswilliger Absicht verändert werden? <br><br> In der Informatik spricht man bei derartigen Aufgabenstellungen vom <strong>„Problem der Byzantinischen Generäle“</strong>. Dieses Problem stellt eine der grossen Herausforderungen dar, wenn jeder neue Knoten einem Peer-to-Peer-System ohne Einschränkungen und Bedingungen beitreten kann, was bei <strong>öffentlichen Blockchains</strong> der Fall ist. Es besteht daher die Notwendigkeit, gute Konsensmechanismen (oder „Konsensalgorithmen“) zu finden, durch die eine nachträgliche Veränderung der Daten praktisch unmöglich wird. <br><br> Eine andere Möglichkeit wäre, die Anzahl der Teilnehmer an einer Blockchain zu beschränken, indem sie von einer zentralen Instanz aufgenommen werden und bestimmte Kriterien erfüllen müssen, sodass ihre Vertrauenswürdigkeit grundsätzlich vorausgesetzt werden kann. Man spricht dann von <strong>privaten Blockchains</strong>. Solche privaten Blockchains mögen innerhalb von Unternehmen sinnvoll sein, allerdings kann dann nicht mehr von einem Peer-to-Peer-System gesprochen werden.";
var a2b_info1 = "Bei herkömmlichen Währungen liegt unser Geld – abgesehen von unserem Bargeld, das aus Geldscheinen und Münzen besteht – in der Regel auf irgendwelchen Konten, bei denen wie in einem Buch die Eingänge und Ausgaben aufgezeichnet werden. Man spricht daher auch von „Buchgeld“. Konten können durch eine Nummer (die IBAN) identifiziert werden. Wenn wir Geld von einem unserer Konten auf ein fremdes Konto überweisen wollen, so ist unsere IBAN gleichsam die Absender-Adresse, und die IBAN des fremden Kontos die Empfänger-Adresse. <br><br> Vergleichbares gibt es auch bei Blockchains und den Kryptowährungen. Auch hier gibt es Nummern, die als <strong>Adressen</strong> bezeichnet werden. Jeder Peer hat eine oder mehrere solcher Adressen. Diese sind vergleichbar mit Konten. An sie kann Kryptogeld gesendet werden, von ihnen weg können Transaktionen getätigt werden. <br><br> Diese Adressen sind allerdings keine willkürlichen, nichtssagenden Nummern, sondern sie bestehen hauptsächlich aus einem <strong>öffentlichen Schlüssel</strong>. Um zu verstehen, worum es sich bei einem öffentlichen Schlüssel handelt, ist ein kurzer Ausflug in die Lehre der Geheimschriften – die „Kryptologie“ – notwendig. <br><br> Blockchains verwenden nämlich <strong>asymmetrische Kryptographie</strong>. Das bedeutet, dass für die Verschlüsselung und die Entschlüsselung von Daten zwei verschiedene Schlüssel notwendig sind. Daten, die mit dem einen Schlüssel verschlüsselt wurden, können nur mit dem anderen Schlüssel wieder entschlüsselt werden. <br><br> Wenn wir nun den einen Schlüssel geheim halten (unseren <strong>„privaten“ Schlüssel</strong>) und den anderen Schlüssel allen anderen Knoten zur Verfügung stellen (unseren <strong>„öffentlichen“ Schlüssel</strong>), dann können wir Transaktionen mit unserem privaten Schlüssel verschlüsselt senden. Das macht sie zwar nicht geheim, denn jeder kann sie mit unserem öffentlichen Schlüssel wieder entschlüsseln, aber es beweist, dass die Transaktion wirklich von uns stammt und dass niemand anders in betrügerischer Absicht eine gefälschte Transaktion von unserer Adresse weggesendet hat. <br><br> Denn niemand anders als wir selbst hat die Möglichkeit, Daten so zu verschlüsseln, dass sie mit unserem öffentlichen Schlüssel entschlüsselt werden können. Nur wir selbst sind dazu in der Lage, weil wir diejenigen sind, die den zu diesem öffentlichen Schlüssel passenden privaten Schlüssel haben. Somit können wir mit unserem privaten Schlüssel unsere Transaktionen autorisieren und mit den öffentlichen Schlüsseln der anderen Konten die Absenderadresse fremder Transaktionen identifizieren.";
var a2b_hinterg1 = "Im Informationstext zu dieser Animation haben wir von „asymmetrischer“ Kryptographie gesprochen. Die folgenden Zeilen sollen nun dazu dienen, „asymmetrische“ von „symmetrischer“ Kryptographie zu unterscheiden. <br><br> Bei der <strong>symmetrischen Kryptographie</strong> gibt es einen einzigen Schlüssel, mit dem die Daten sowohl verschlüsselt als auch wieder entschlüsselt werden können. Das bedeutet, dass Sender und Empfänger einer Nachricht einen gemeinsamen Schlüssel teilen. Womit sich ein Problem ergibt, nämlich jenes, wie dieser Schlüssel heimlich ausgetauscht bzw. vereinbart werden kann. Falls der Austausch eines gemeinsamen Schlüssels klappt und falls dieser Schlüssel keinem unbefugten Dritten in die Hände fällt, sind durch symmetrische Kryptographie Vertraulichkeit und Datenintegrität gesichert, weil keine unberechtigte Person die Daten lesen oder verändern kann. Und die symmetrische Kryptographie hat noch einen Vorteil: Sie benötigt nur einen sehr geringen Berechnungsaufwand. <br><br> Bei der <strong>asymmetrischen Kryptographie</strong> gibt es, wie schon erwähnt, ein Schlüsselpaar, bestehend aus einem geheimen privaten Schlüssel und einem allgemein bekannten öffentlichen Schlüssel. Daher spricht in diesem Zusammenhang auch von <strong>„public key cryptography“</strong>. <br><br> Alles, was von wem auch immer mit unserem öffentlichen Schlüssel verschlüsselt wird, können nur wir entschlüsseln, weil wir die einzigen sind, die den dazu passenden privaten Schlüssel besitzen. In diese Richtung ist also Vertraulichkeit gewährleistet. Alles, was wir mit unserem privaten Schlüssel verschlüsseln, können zwar alle anderen mit unserem öffentlichen Schlüssel entschlüsseln, aber weil sie das können, ist dadurch auch erwiesen, dass die Nachricht von uns stammt. In diese Richtung ist also Authentifizierung möglich. <br><br> Ideal wäre es, wenn es zwischen dem privaten und dem öffentlichen Schlüssel überhaupt keine mathematische Beziehung gäbe, tatsächlich gibt es in der Realität jedoch eine, sodass aus dem öffentlichen Schlüssel der private Schlüssel berechnet werden könnte. Aber, und das ist das Entscheidende, wenn die Schlüssel lang genug sind, wird der Berechnungsaufwand zur Bestimmung des anderen Schlüssels so gross, dass es alle vernünftigen Grenzen übersteigt. Was nützt es, wenn wir den einen Schlüssel aus dem anderen berechnen können, dafür aber so viel Zeit brauchen, dass die Lebensdauer unseres Universums dazu nicht ausreicht? <br><br> Wie auch immer, jedenfalls haben wir bei der asymmetrischen Kryptographie das Problem des Austauschs eines gemeinsamen Schlüssels nicht mehr. Weil aber insgesamt der Berechnungsaufwand bei der asymmetrischen Verschlüsselung erheblich ist, werden gewöhnlich nur verhältnismässig kleine Datenmengen asymmetrisch verschlüsselt, wie z.B. ein Hashwert. Oder ein symmetrischer Schlüssel, der ausgetauscht werden soll …";
var a2c_info1 = "Infotext 2a";
var a2c_hinterg1 = "Hintergrundtext 2c";

var a3a_info1 = "Infotext 3a";
var a3a_hinterg1 = "Hintergrundtext 3a";
var a3b_info1 = "Infotext 3b";
var a3b_hinterg1 = "Hintergrundtext 3b";
var a3c_info1 = "Infotext 3c";
var a3c_hinterg1 = "Hintergrundtext 3c";
var a3d_info1 = "Infotext 3d";
var a3d_hinterg1 = "Hintergrundtext 3d";

var a4a_info1 = "Infotext 4a";
var a4a_hinterg1 = "Hintergrundtext 4a";
var a4b_info1 = "Infotext 4b";
var a4b_hinterg1 = "Hintergrundtext 4b";
var a4c_info1 = "Infotext 4a";
var a4c_hinterg1 = "Hintergrundtext 4c";

var a5ab_info1 = "Infotext Animation 5";
var a5ab_hinterg1 = "Hintergrundtext Animation 5"

var a6a_info1 = "Infotext 6a";
var a6a_hinterg1 = "Hintergrundtext 6a";
var a6b_info1 = "Infotext 6b";
var a6b_hinterg1 = "Hintergrundtext 6b";
var a6c_info1 = "Infotext 6a";
var a6c_hinterg1 = "Hintergrundtext 6c"

var a7_info1 = "Infotext Animation 7";
var a7_hinterg1 = "Hintergrundtext Animation 7"

var a8_info1 = "Der letzte Erklärungstext";
var a8_hinterg1 = "Der letzte Hintergrundtext";

var copyright_hashes = "Die Hashwerte werden berechnet unter Verwendung der JavaScript Implementation von üblichen \
Hashfunktionen, zur Verfügung gestellt von </br>&copy; 2012-2017, Tomas Aparicio und </br>&copy; 1999-2012, Paul \
Johnston, Angel Marin, Jeremy Lin. </br>Quelle: <a href='https://github.com/h2non/jshashes' target='_blank'\
style='color: rgb(254,205,49)'>GitHub</a>";